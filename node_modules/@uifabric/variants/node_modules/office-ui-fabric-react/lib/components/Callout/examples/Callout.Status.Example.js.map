{"version":3,"file":"Callout.Status.Example.js","sourceRoot":"../src/","sources":["components/Callout/examples/Callout.Status.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAMtH,iCAAiC;AACjC,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;AACzB,IAAM,MAAM,GAAG,cAAc,CAAC;IAC5B,UAAU,EAAE;QACV,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,cAAc;QACvB,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,EAAE;KACX;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,GAAG;KACd;IAED,OAAO,EAAE;QACP,KAAK,CAAC,KAAK,CAAC,KAAK;QACjB;YACE,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW;YACpB,UAAU,EAAE,WAAW,CAAC,SAAS;SAClC;KACF;CACF,CAAC,CAAC;AAEH,eAAe;AACf;IAA0C,wCAA+C;IAAzF;QAAA,qEAmDC;QAlDQ,WAAK,GAA+B;YACzC,gBAAgB,EAAE,KAAK;SACxB,CAAC;QAEM,wBAAkB,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;QAmCvD,wBAAkB,GAAG;YAC3B,KAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB;aAC/C,CAAC,CAAC;QACL,CAAC,CAAC;QAEM,uBAAiB,GAAG;YAC1B,KAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC,CAAC;;IACJ,CAAC;IA5CQ,qCAAM,GAAb;QACU,IAAA,8CAAgB,CAAgB;QAExC,OAAO,CACL;YACE,6BAAK,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,kBAAkB;gBAC7D,oBAAC,aAAa,IACZ,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAChC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,oBAAoB,GACpE,CACE;YACL,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,CAC9B,oBAAC,OAAO,IACN,SAAS,EAAE,MAAM,CAAC,OAAO,EACzB,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,EACvC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EACjC,IAAI,EAAC,QAAQ,eACH,WAAW;gBAErB,oBAAC,aAAa;oBACZ;wBACE,2BAAG,SAAS,EAAE,MAAM,CAAC,OAAO,iIAGxB,CACH,CACW,CACR,CACX,CACA,CACJ,CAAC;IACJ,CAAC;IAaH,2BAAC;AAAD,CAAC,AAnDD,CAA0C,KAAK,CAAC,SAAS,GAmDxD","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, getTheme, FontWeights, mergeStyleSets, DelayedRender, Callout } from 'office-ui-fabric-react';\n\nexport interface IStatusCalloutExampleState {\n  isCalloutVisible?: boolean;\n}\n\n// Themed styles for the example.\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  buttonArea: {\n    verticalAlign: 'top',\n    display: 'inline-block',\n    textAlign: 'center',\n    margin: '0 100px',\n    minWidth: 130,\n    height: 32,\n  },\n  callout: {\n    maxWidth: 300,\n  },\n\n  subtext: [\n    theme.fonts.small,\n    {\n      margin: 0,\n      height: '100%',\n      padding: '24px 20px',\n      fontWeight: FontWeights.semilight,\n    },\n  ],\n});\n\n// Example code\nexport class StatusCalloutExample extends React.Component<{}, IStatusCalloutExampleState> {\n  public state: IStatusCalloutExampleState = {\n    isCalloutVisible: false,\n  };\n\n  private _menuButtonElement = React.createRef<HTMLDivElement>();\n\n  public render(): JSX.Element {\n    const { isCalloutVisible } = this.state;\n\n    return (\n      <>\n        <div className={styles.buttonArea} ref={this._menuButtonElement}>\n          <DefaultButton\n            onClick={this._onShowMenuClicked}\n            text={isCalloutVisible ? 'Hide StatusCallout' : 'Show StatusCallout'}\n          />\n        </div>\n        {this.state.isCalloutVisible && (\n          <Callout\n            className={styles.callout}\n            target={this._menuButtonElement.current}\n            onDismiss={this._onCalloutDismiss}\n            role=\"status\"\n            aria-live=\"assertive\"\n          >\n            <DelayedRender>\n              <>\n                <p className={styles.subtext}>\n                  This message is treated as an aria-live assertive status message, and will be read by a screen reader\n                  regardless of focus.\n                </p>\n              </>\n            </DelayedRender>\n          </Callout>\n        )}\n      </>\n    );\n  }\n\n  private _onShowMenuClicked = (): void => {\n    this.setState({\n      isCalloutVisible: !this.state.isCalloutVisible,\n    });\n  };\n\n  private _onCalloutDismiss = (): void => {\n    this.setState({\n      isCalloutVisible: false,\n    });\n  };\n}\n"]}