{"version":3,"file":"TextField.CustomRender.Example.js","sourceRoot":"../src/","sources":["components/TextField/examples/TextField.CustomRender.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextField, ITextFieldProps } from 'office-ui-fabric-react/lib/TextField';\nimport { DefaultButton, IconButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { Icon, IIconStyles } from 'office-ui-fabric-react/lib/Icon';\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { IStackTokens, Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { getId, IRenderFunction, memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { getTheme, FontWeights, ITheme } from 'office-ui-fabric-react/lib/Styling';\n\nexport interface ITextFieldCustomRenderExampleState {\n  isCalloutVisible: boolean;\n}\n\nconst stackTokens: IStackTokens = {\n  childrenGap: 20,\n  maxWidth: 300,\n};\n\nconst labelCalloutStackStyles: Partial<IStackStyles> = { root: { padding: 20 } };\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { marginBottom: -3 } };\nconst iconStyles: Partial<IIconStyles> = { root: { marginBottom: -3 } };\n\nconst getDescriptionStyles = memoizeFunction((theme: ITheme) => ({\n  root: { color: theme.palette.green, fontWeight: FontWeights.bold },\n}));\n\nexport class TextFieldCustomRenderExample extends React.Component<{}, ITextFieldCustomRenderExampleState> {\n  public state: ITextFieldCustomRenderExampleState = { isCalloutVisible: false };\n\n  private _descriptionId: string = getId('description');\n  private _iconButtonId: string = getId('iconButton');\n  private _labelId: string = getId('label');\n\n  public render(): JSX.Element {\n    return (\n      <Stack tokens={stackTokens}>\n        <TextField\n          aria-labelledby={this._labelId}\n          label=\"Custom label rendering\"\n          onRenderLabel={this._onRenderLabel}\n          description=\"Click the (i) icon!\"\n        />\n\n        <TextField label=\"Wrapping default label renderer\" onRenderLabel={this._onWrapDefaultLabelRenderer} />\n\n        <TextField\n          label=\"Custom description rendering\"\n          description=\"A colorful description!\"\n          onRenderDescription={this._onRenderDescription}\n        />\n      </Stack>\n    );\n  }\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element => {\n    const theme = getTheme();\n    return (\n      <Text variant=\"small\" styles={getDescriptionStyles(theme)}>\n        {props.description}\n      </Text>\n    );\n  };\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element => {\n    return (\n      <>\n        <Stack horizontal verticalAlign=\"center\">\n          <span id={this._labelId}>{props.label}</span>\n          <IconButton\n            id={this._iconButtonId}\n            iconProps={{ iconName: 'Info' }}\n            title=\"Info\"\n            ariaLabel=\"Info\"\n            onClick={this._onIconClick}\n            styles={iconButtonStyles}\n          />\n        </Stack>\n        {this.state.isCalloutVisible && (\n          <Callout\n            target={'#' + this._iconButtonId}\n            setInitialFocus={true}\n            onDismiss={this._onDismiss}\n            ariaDescribedBy={this._descriptionId}\n            role=\"alertdialog\"\n          >\n            <Stack tokens={stackTokens} horizontalAlign=\"start\" styles={labelCalloutStackStyles}>\n              <span id={this._descriptionId}>\n                The custom label includes an IconButton that displays this Callout on click.\n              </span>\n              <DefaultButton onClick={this._onDismiss}>Close</DefaultButton>\n            </Stack>\n          </Callout>\n        )}\n      </>\n    );\n  };\n\n  private _onWrapDefaultLabelRenderer = (\n    props: ITextFieldProps,\n    defaultRender: IRenderFunction<ITextFieldProps>,\n  ): JSX.Element => {\n    return (\n      <>\n        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 6 }}>\n          <span>{defaultRender(props)}</span>\n          <Icon iconName=\"Globe\" title=\"Globe\" ariaLabel=\"Globe\" styles={iconStyles} />\n        </Stack>\n      </>\n    );\n  };\n\n  private _onIconClick = (): void => {\n    this.setState({ isCalloutVisible: !this.state.isCalloutVisible });\n  };\n\n  private _onDismiss = (): void => {\n    this.setState({ isCalloutVisible: false });\n  };\n}\n"]}